// ******************** Global Variables ***************************



function 四柱模塊(天干, 地支) {
    this.天干 = 天干;
    this.地支 = 地支;
    this.干支 = 天干 + 地支;
    this.納音 = 六十干支屬性(六十干支字轉值(this.干支), "納音");
    this.五行 = 六十干支屬性(六十干支字轉值(this.干支), "五行");
    this.運星 = "";
}

function 天干模塊(天干, 日主天干) {
    this.天干 = 天干;
    this.係數 = 天干屬性(天干, "係數");
    this.陰陽 = 天干屬性(天干, "陰陽");
    this.五行 = 天干屬性(天干, "五行");
    this.通根 = {"年": false, "月": false, "日": false, "時": false, "數":0};
	this.生祿 = {"年": false, "月": false, "日": false, "時": false, "數":0}; //地支有生祿
	this.陽刃 = {"年": false, "月": false, "日": false, "時": false, "數":0}; //陽干地支有陽刃
    this.帝旺 = {"年": false, "月": false, "日": false, "時": false, "數":0}; //陰干地支有帝旺
    if (日主天干!="") this.十神 = 尋十神(天干, 日主天干);
    this.力量 = 0; //default value
    //this.字體顏色 = 天干屬性(天干, "字體顏色");
    //this.背景顏色 = 天干屬性(天干, "背景顏色");
}

function 地支模塊(地支, 日主天干) {
    this.地支 = 地支;
    this.係數 = 地支屬性(地支, "係數");
    this.陰陽 = 地支屬性(地支, "陰陽");
    this.五行 = 地支屬性(地支, "五行");
	this.透干 = {"年": false, "月": false, "日": false, "時": false, "數":0};
    this.力量 = 0; //default value
    this.庫馬花 = 地支屬性(地支, "庫馬花");
    this.藏干 = 地支屬性(地支, "藏干");
    this.藏干1 = this.藏干.substr(0, 1);
    if (this.藏干.length > 1) { this.藏干2 = this.藏干.substr(1, 1); } else { this.藏干2 = ""; }
    if (this.藏干.length > 2) { this.藏干3 = this.藏干.substr(2, 1); } else { this.藏干3 = ""; }
    this.藏干1力量 = 0;
    this.藏干2力量 = 0;
    this.藏干3力量 = 0;	
    this.十神1 = 尋十神(this.藏干1, 日主天干);
    this.十神2 =  尋十神(this.藏干2, 日主天干);
    this.十神3 =  尋十神(this.藏干3, 日主天干);
    this.十神1力量 = 0;
    this.十神2力量 = 0;
    this.十神3力量 = 0;
    //this.十神1單字 = 十神單字(this.十神1);
    //this.十神2單字 = 十神單字(this.十神2);
    //this.十神3單字 = 十神單字(this.十神3);
    //this.字體顏色 = 地支屬性(this.地支, "字體顏色");
    //this.背景顏色 = 地支屬性(this.地支, "背景顏色");
}

function 十神架構(命盤){
    var 日主 = 命盤.日干.天干;
    var 十神矩陣1 = [命盤.年干.十神, 命盤.月干.十神, "", 命盤.時干.十神]; //天干十神
    var 十神矩陣2 = [命盤.年支.十神1, 命盤.月支.十神1, 命盤.日支.十神1, 命盤.時支.十神1]; //地支本氣十神
    var 十神矩陣3 = [命盤.年干.十神, 命盤.月干.十神, "", 命盤.時干.十神, 命盤.年支.十神1, 命盤.月支.十神1, 命盤.日支.十神1, 命盤.時支.十神1]; //天干與地支本氣十神
    var 年柱十神=[命盤.年干.十神, 命盤.年支.十神1, 命盤.年支.十神2, 命盤.年支.十神3];
    var 月柱十神=[命盤.月干.十神, 命盤.月支.十神1, 命盤.月支.十神2, 命盤.月支.十神3];
    var 日柱十神=["", 命盤.日支.十神1, 命盤.日支.十神2, 命盤.日支.十神3];
    var 時柱十神=[命盤.時干.十神, 命盤.時支.十神1, 命盤.時支.十神2, 命盤.時支.十神3];
    var 十神矩陣4 = 年柱十神.concat(月柱十神, 日柱十神, 時柱十神); //天干+地支本氣+藏干十神
    var 十神總矩陣 = [十神矩陣1, 十神矩陣2, 十神矩陣3, 十神矩陣4];

     this.數據 = [];

     for (var i = 0; i < 10; i++) {
            this.數據[i]=new 十神模塊(i, 十神總矩陣);
         }
    
    this.力量總和=0;
    this.內在 = this.數據[十神字轉數("比肩")].天干地支 + this.數據[十神字轉數("劫財")].天干地支 + this.數據[十神字轉數("食神")].天干地支 + this.數據[十神字轉數("傷官")].天干地支 + this.數據[十神字轉數("正印")].天干地支 + this.數據[十神字轉數("偏印")].天干地支;
    this.外界 = this.數據[十神字轉數("偏財")].天干地支 + this.數據[十神字轉數("正財")].天干地支 + this.數據[十神字轉數("正官")].天干地支 + this.數據[十神字轉數("七殺")].天干地支;

    this.偏 = this.數據[十神字轉數("劫財")].命盤 + this.數據[十神字轉數("傷官")].命盤 + this.數據[十神字轉數("偏財")].命盤 + this.數據[十神字轉數("七殺")].命盤 + this.數據[十神字轉數("偏印")].命盤;
    this.正 = this.數據[十神字轉數("比肩")].命盤 + this.數據[十神字轉數("食神")].命盤 + this.數據[十神字轉數("正財")].命盤 + this.數據[十神字轉數("正官")].命盤 + this.數據[十神字轉數("正印")].命盤;
}


function 十神模塊(十神數, 十神總矩陣){
    this.十神=十神數轉字(十神數);
    this.力量=0;
    this.力量比率=0;
    for (var j=0; j < 十神總矩陣.length;j++){
        var 十神數量=0;
        var 十神矩陣 = 十神總矩陣[j];
        for (var i = 0; i < 十神矩陣.length; ++i) {
            if (十神矩陣[i] == 十神數轉字(十神數)) 十神數量++;
        }
        switch (j){
            case 0:
                this.天干=十神數量;
                break;
            case 1:
                this.地支本氣=十神數量;
                break;
            case 2:
                this.天干加地支本氣=十神數量;
                break;
            case 3:
                this.命盤=十神數量;
                break;
        }
        
    }
}

function 五行架構(命盤){
    var 五行矩陣 = [命盤.年干.五行, 命盤.年支.五行, 命盤.月干.五行, 命盤.月支.五行, 命盤.日干.五行, 命盤.日支.五行, 命盤.時干.五行, 命盤.時支.五行];
    var 陰陽矩陣=[命盤.年干.陰陽, 命盤.年支.陰陽, 命盤.月干.陰陽, 命盤.月支.陰陽, 命盤.日干.陰陽, 命盤.日支.陰陽, 命盤.時干.陰陽, 命盤.時支.陰陽];

    this.陽 = 陰陽矩陣.filter(function(value) { return value =="陽" }).length;
    this.陰 =陰陽矩陣.filter(function(value) { return value =="陰" }).length;
    this.全陽全陰 = "";  //命盤是否全陽全陰，純陽、純陰
    this.木 = new 五行模塊(命盤.日干.五行, "木", 五行矩陣);
    this.火 = new 五行模塊(命盤.日干.五行, "火", 五行矩陣);
    this.土 = new 五行模塊(命盤.日干.五行, "土", 五行矩陣);
    this.金 = new 五行模塊(命盤.日干.五行, "金", 五行矩陣);
    this.水 = new 五行模塊(命盤.日干.五行, "水", 五行矩陣);
    this.五行力量總和 = 0; //default
    this.五行總和比率 = 0; //checksum, should be always 100%
    this.數據=[];  //to store 五行element in array form
    this.五行力量順序=[];  //五行依力度順序排列
    this.五行喜忌={"木": "", "火": "", "土": "", "金": "", "水": "", "五行喜": "", "五行忌": ""}; //obj to store each element's 喜忌
    this.五行喜忌總結=[]; // array to store 五行喜忌, to make it as table
    this.五行具足={"五行俱全": false, "缺木": false, "缺火": false, "缺土": false, "缺金": false, "缺水": false, "欠缺五行": ""};
}


function 五行模塊(日主五行, 五行元件, 五行矩陣){
    this.五行=五行元件;
    this.五神 = 五行轉五神(日主五行, 五行元件);
    this.數量=五行矩陣.filter(function(value) { return value ==五行元件}).length;
    this.力量=0;  //default value
    this.力量比率=0;  //default value
    this.力量形態="";  //不及、弱、中和、旺相、太過
    this.力量形態數=0;  //1、3、5、7、9
    this.力量順序=-1;  //0 力量最小的五行， 4 力量最大的五行
    this.喜忌="";
	this.流通 = false;  //五行是否流通，有生則通
    this.合化 = 0; //天干五合與地支合化出來的五行力量
}

function 五神架構(命盤){
    this.比劫 = new 五神模塊(命盤, "比劫");
    this.食傷 = new 五神模塊(命盤, "食傷");
    this.財才 = new 五神模塊(命盤, "財才");
    this.官殺 = new 五神模塊(命盤, "官殺");
    this.印梟 = new 五神模塊(命盤, "印梟");
    this.力量總和 = 0; //十神力量的總和
}

function 五神模塊(命盤, 五神){
    this.五行 = 十神五行(命盤.日主, 五神);
    //this.數量=五行矩陣.filter(function(value) { return value ==五行元件}).length;
    this.力量=0;  //default value
    this.力量比率=0;  //default value
}

function 天干架構(命盤, 選項){
     // 選項：0 = 天干, 1: 本氣藏干，2: 天干+本氣藏干，3: 天干+所有藏干

     var 天干矩陣1 = [命盤.年干.天干, 命盤.月干.天干, 命盤.日干.天干, 命盤.時干.天干];
     var 天干矩陣2 = [命盤.年支.藏干1, 命盤.月支.藏干1, 命盤.日支.藏干1, 命盤.時支.藏干1];
     var 天干矩陣3 = [命盤.年干.天干, 命盤.月干.天干, 命盤.日干.天干, 命盤.時干.天干, 命盤.年支.藏干1, 命盤.月支.藏干1, 命盤.日支.藏干1, 命盤.時支.藏干1];
     var 年柱干 = [命盤.年干.天干, 命盤.年支.藏干1, 命盤.年支.藏干2, 命盤.年支.藏干3];
     var 月柱干 = [命盤.月干.天干, 命盤.月支.藏干1, 命盤.月支.藏干2, 命盤.月支.藏干3];
     var 日柱干 = [命盤.日干.天干, 命盤.日支.藏干1, 命盤.日支.藏干2, 命盤.日支.藏干3];
     var 時柱干 = [命盤.時干.天干, 命盤.時支.藏干1, 命盤.時支.藏干2, 命盤.時支.藏干3];
     var 天干矩陣4 = 年柱干.concat(月柱干, 日柱干, 時柱干);
     var 天干總矩陣 = [天干矩陣1, 天干矩陣2, 天干矩陣3, 天干矩陣4];

     this.天干數據 = [];

     for (var i = 0; i < 10; i++) {
            this.天干數據[i]=new 天干分析模塊(i, 天干總矩陣);
         }
}

function 天干分析模塊(天干數, 天干總矩陣){
    this.十干=天干數轉字(天干數);
    this.力度=0;
    this.合 = "";
    this.爭合 = "";

    for (var j=0; j < 天干總矩陣.length;j++){
        var 天干數量=0;
        天干矩陣 = 天干總矩陣[j];
        for (var i = 0; i < 天干矩陣.length; ++i) {
            if (天干矩陣[i] == 天干數轉字(天干數)) 天干數量++;
        } //end for
        switch (j){
            case 0:
                this.天干=天干數量;
                break;
            case 1:
                this.地支本氣=天干數量;
                break;
            case 2:
                this.天干加地支本氣=天干數量;
                break;
            case 3:
                this.命盤=天干數量;
                break;
        } //end switch
    } // end for
} // end function 天干分析模塊

function 四柱架構(命盤){
    this.干合 = 0; //0=沒有合；1=一個合；2=2個不同的合；3=1支合2支；4：2個相同的合；5=1支合3支
    this.半合 = 0; //0=沒有合；1=一個合；2=2個不同的合；3=1支合2支；4：2個相同的合；5=1支合3支
    this.六合 = 0; //0=沒有合；1=一個合；2=2個不同的合；3=1支合2支；4：2個相同的合；5=1支合3支
    this.暗合 = 0; //0=沒有合；1=一個合；2=2個不同的合；3=1支合2支；4：2個相同的合；5=1支合3支
    this.相冲 = 0;
    this.相害 = 0;
    this.相刑 = 0;
    this.神煞 = new 命盤神煞設定(); //命盤整體神煞數量
    this.神煞矩陣 = [];
    this.四柱數據 = [];
    this.天干力度 = []; //每個天干力度的加減，如坐基、月令、年時地支所造成的加減
    this.地支力度 = [];
    for(var i=0; i<4; i++){
        this.四柱數據[i]=new 四柱分析模塊(i);
    }

    this.四柱數據[0].天干 = 命盤.年干.天干;
    this.四柱數據[0].地支 = 命盤.年支.地支;
    this.四柱數據[1].天干 = 命盤.月干.天干;
    this.四柱數據[1].地支 = 命盤.月支.地支;
    this.四柱數據[2].天干 = 命盤.日干.天干;
    this.四柱數據[2].地支 = 命盤.日支.地支;
    this.四柱數據[3].天干 = 命盤.時干.天干;
    this.四柱數據[3].地支 = 命盤.時支.地支;

    this.四柱數據[0].運星 = 命盤.年柱.運星;
    this.四柱數據[1].運星 = 命盤.月柱.運星;
    this.四柱數據[2].運星 = 命盤.日柱.運星;
    this.四柱數據[3].運星 = 命盤.時柱.運星;

    this.四柱數據[0].天干十神 = 命盤.年干.十神;
    this.四柱數據[0].地支十神1 = 命盤.年支.十神1;
    this.四柱數據[0].地支十神2 = 命盤.年支.十神2;
    this.四柱數據[0].地支十神3 = 命盤.年支.十神3;

    this.四柱數據[1].天干十神 = 命盤.月干.十神;
    this.四柱數據[1].地支十神1 = 命盤.月支.十神1;
    this.四柱數據[1].地支十神2 = 命盤.月支.十神2;
    this.四柱數據[1].地支十神3 = 命盤.月支.十神3;

    this.四柱數據[2].天干十神 = "";
    this.四柱數據[2].地支十神1 = 命盤.日支.十神1;
    this.四柱數據[2].地支十神2 = 命盤.日支.十神2;
    this.四柱數據[2].地支十神3 = 命盤.日支.十神3;

    this.四柱數據[3].天干十神 = 命盤.時干.十神;
    this.四柱數據[3].地支十神1 = 命盤.時支.十神1;
    this.四柱數據[3].地支十神2 = 命盤.時支.十神2;
    this.四柱數據[3].地支十神3 = 命盤.時支.十神3;

    this.四柱數據[0].天干五行 = 命盤.年干.五行;
    this.四柱數據[1].天干五行 = 命盤.月干.五行;
    this.四柱數據[2].天干五行 = 命盤.日干.五行;
    this.四柱數據[3].天干五行 = 命盤.時干.五行;

    this.四柱數據[0].地支五行 = 命盤.年支.五行;
    this.四柱數據[1].地支五行 = 命盤.月支.五行;
    this.四柱數據[2].地支五行 = 命盤.日支.五行;
    this.四柱數據[3].地支五行 = 命盤.時支.五行;
}

function 四柱分析模塊(四柱數){
    this.四柱=四柱名稱(四柱數);
    this.天干 = "";
    this.天干五行 = "";
    this.地支 = "";
    this.地支五行 = "";
    this.天干十神 = "";
    this.地支十神1 = "";
    this.地支十神2 = "";
    this.地支十神3 = "";
    this.神煞 = new 四柱神煞設定();
    this.神煞矩陣 = [];
    this.財庫 = false;
    this.通根 = {"年": false, "月": false, "日": false, "時": false, "數":0}; //通根的四柱
	this.透干 = {"年": false, "月": false, "日": false, "時": false, "數":0}; //地支透干
	this.生祿 = {"年": false, "月": false, "日": false, "時": false, "數":0}; //地支有生祿
	this.陽刃 = {"年": false, "月": false, "日": false, "時": false, "數":0}; //陽干地支有陽刃
    this.帝旺 = {"年": false, "月": false, "日": false, "時": false, "數":0}; //陰干地支有帝旺
    this.天干五合="";
    this.五合鄰遙爭="";
    //this.五合形態=0; //0=沒有合；1=一個合；2=2個不同的合；3=1支合2支；4：2個相同的合；5=1支合3支
    this.天干五合化="";
    this.五合天干="";
    this.五合數量=0;
    this.五合柱="";
    this.五合柱不參與="0123";
    this.五合柱間隔=0; //兩個合柱的間隔，鄰合=1，隔合=2，遙合=3
    this.五合補充="";
    this.干支合化 = "";
    this.干支合化補充 = "";
    this.三會="";
    this.三會化="";
    this.三會柱="";
    this.三會柱不參與="";
    this.三會補充="";
    this.總合 = 0; //有任何三合，六合，暗合，設成1
    this.三合="";
    this.三合化=""; //化出什麼五行，或是合而不化
    this.三合柱="";
    this.三合柱不參與="";
    this.三合補充="";
    this.三刑="";
    this.三刑柱="";
    this.三刑柱不參與="";
    this.三刑補充="";
    this.半合=""; //半合水 。。。。。。
    this.半合地支 = ""; //申子
    this.半合鄰遙爭=""; //鄰合、遙合、爭合
    this.半合數量 = 0; // 這個柱有多少個半合數量
    this.半合柱 = ""; // 與那一柱有半合
    this.半合柱不參與="0123";
    this.半合柱間隔=0; //兩個合柱的間隔，鄰合=1，隔合=2，遙合=3
    this.半合化=""; //化出什麼五行，或是合而不化
    this.半合補充=""; //補充文字
    this.六合=""; //子丑合化土、寅亥合化木、。。。。
    this.六合化=""; //化出什麼五行，或是合而不化
    this.六合地支="";
    this.六合鄰遙爭=""; // 鄰合、遙合、爭合
    this.六合數量 = 0; // 這個柱有多少個六合數量
    this.六合柱 = ""; // 與那一柱有六合
    this.六合柱不參與="0123";
    this.六合柱間隔=0; //兩個合柱的間隔，鄰合=1，隔合=2，遙合=3
    this.六合補充=""; //補充文字
    this.暗合="";
    this.暗合化=""; //化出什麼五行，或是暗而不化
    this.暗合地支=""; //子巳 地支暗合
    this.暗合天干=""; //戊癸 （子巳地支暗合的天干）
    this.暗合鄰遙爭=""; // 鄰合、遙合、爭合
    this.暗合數量 = 0; // 這個柱有多少個暗合數量
    this.暗合柱 = ""; // 與那一柱有暗合
    this.暗合柱不參與="0123";
    this.暗合柱間隔=0; //兩個合柱的間隔，鄰合=1，隔合=2，遙合=3
    this.暗合補充=""; //補充文字
    this.三合爭合="";
    this.總刑=0; //有任何三刑，半刑，自刑，設成1
    this.相刑=""; //包括子卯
    this.相刑地支 = "";
    this.相刑鄰遙爭=""; //0=鄰，1=遙
    this.相刑數量 = 0;
    this.相刑柱 = ""; // 與那一柱有刑
    this.相刑柱不參與="0123";
    this.相刑柱間隔=0; //兩個合柱的間隔，鄰合=1，隔合=2，遙合=3
    this.相刑方向 = -1; //1=我刑，0=刑我
    this.相刑補充=""; //補充文字
    this.相冲="";
    this.相冲地支 = "";
    this.相冲鄰遙爭=""; //0=鄰，1=遙
    this.相冲數量 = 0;
    this.相冲柱 = ""; // 與那一柱有刑
    this.相冲柱不參與="0123";
    this.相冲柱間隔=0; //兩個合柱的間隔，鄰合=1，隔合=2，遙合=3
    this.相冲庫馬花=""; //補充文字
    this.相冲補充=""; //補充文字
    this.相害="";
    this.相害地支 = "";
    this.相害鄰遙爭=""; //0=鄰，1=遙
    this.相害數量 = 0;
    this.相害柱 = ""; // 與那一柱有刑
    this.相害柱不參與="0123";
    this.相害柱間隔=0; //兩個合柱的間隔，鄰合=1，隔合=2，遙合=3
    this.相害補充=""; //補充文字
    this.刑冲合會害=new 四柱刑冲合會害屬性();
}

function 四柱刑冲合會害屬性(){
    this.總結=[];  //總結該柱的刑冲合會害
    this.相冲={"冲": false, "地支條件": "", "數量": 0, "四柱": "", "四柱不參與": "", "間隔": 0, "備註": "", "庫馬花": ""};
    this.相害={"害": false, "地支條件": "", "數量": 0, "四柱": "", "四柱不參與": "", "間隔": 0, "備註": ""};
}

function 四柱神煞設定(){
    this.天乙貴人 = false;
    this.天德 = false;
    this.日德 = false;
    this.月德 = false;
    this.三奇貴人 = false;
    this.文昌 = false;
    this.太極貴人 = false;
    this.福星 = false;
    this.魁罡 = false;
    this.紅鸞 = false;
    this.天喜 = false;
    this.學堂 = false;
    this.十干祿 = false;
    this.驛馬 = false;
    this.將星 = false;
    this.華蓋 = false;
    this.金輿 = false;
    this.天醫 = false;
    this.空亡 = false;
    this.劫煞 = false;
    this.亡神 = false;
    this.羊刃 = false;
    this.元辰 = false;
    this.災煞 = false;
    this.桃花 = false;
    this.紅艷 = false;
    this.四廢日 = false;
    this.孤辰 = false;
    this.寡宿 = false;
    this.天羅地網 = false;
    this.十惡大敗 = false;
    this.天地轉殺 = false;
}

function 命盤神煞設定(){
    this.空亡 = 0;
    this.魁罡 = 0;
    this.羊刃 = 0;
}

function 地支架構(命盤){

    var 地支矩陣 = [命盤.年支.地支, 命盤.月支.地支, 命盤.日支.地支, 命盤.時支.地支];
    
    this.地支數據 = [];
    for(var i=0; i<12; i++){
        this.地支數據[i]=new 地支分析模塊(i, 地支矩陣);
    }

    this.三會 = new 地支三會模塊();
    this.三合 = new 地支三合模塊();
    this.半合 = 0; //半合數量
    this.三刑 = new 地支三刑模塊();
    this.相刑 = 0;
    this.六合 = 0;
    this.相冲 = 0;
    this.相害 = 0;
}

function 地支三合模塊(){
    this.命盤三合 = -1; //-1. 沒有三合 0. 寅午戌 1. 巳酉丑 2. 申子辰 3. 亥卯未
    this.命盤三合支 = ""; //三合的組合字，如寅午戌 。。。。 0. 寅午戌 1. 巳酉丑 2. 申子辰 3. 亥卯未
    this.三合柱 = -1; //三合的地支位置，比方'申子辰'，三合於'年月日'，就='012'
    this.不參與地支=""; //沒有參與三合的地支柱，比如'子',沒有參與’亥卯未‘三合，就"子"
    this.不參與地支柱=-1; //沒有參與三合的地支柱，比如'子',沒有參與’亥卯未‘三合，子在年柱，就=0
    this.合出五行 = "";
    this.爭合地支 = ""; //那個地支有爭合，比方'申子辰'，有2個子，就=子
    this.爭合地支柱 = -1; // 爭合的柱，比方年柱與日主爭合，就=02
}

function 地支三會模塊(){
    this.命盤三會 = -1; //沒有三會，0. 寅卯辰 1. 巳午未 2. 申酉戌 3. 亥子丑
    this.命盤三會支 = ""; //三會的組合字，如寅午戌 。。。。 寅卯辰 巳午未 申酉戌 亥子丑
    this.三會柱 = -1; //三會的地支位置，比方'寅卯辰'，三會於'年月日'，就='012'
    this.不參與地支=""; //沒有參與三會的地支柱，比如'子',沒有參與’寅卯辰‘三會，子在年柱，就"子"
    this.不參與地支柱=-1;
    this.會出五行 = "";
}

function 地支三刑模塊(){
    this.命盤三刑 = -1; //沒有三刑，0. 寅巳申 1. 丑戌未
    this.命盤三刑支 = ""; //三刑的組合字
    this.三刑柱 = -1; 
    this.不參與地支="";
    this.不參與地支柱=-1;
}

function 地支分析模塊(地支數, 地支矩陣){
    var 地支數量=0;
    //八字命盤;

    for(var i = 0; i < 地支矩陣.length; ++i){
        if(地支矩陣[i] == 地支數轉字(地支數)) 地支數量++;
    }
    this.地支 = 地支數轉字(地支數);
    this.數量=地支數量;
    this.力度=0;
    this.合 = 0; //是否有被合掉
    this.爭合 = 0; //是否有爭合
}

function 庫馬花架構(命盤){
    var 地支矩陣 = [命盤.年支.地支, 命盤.月支.地支, 命盤.日支.地支, 命盤.時支.地支];
    var 庫量=0, 馬量=0, 花量=0;

    for (i = 0; i < 地支矩陣.length; i++){
        if (地支矩陣[i] == "辰" || 地支矩陣[i] == "戌" || 地支矩陣[i] == "丑" || 地支矩陣[i] == "未") 庫量++;
        if (地支矩陣[i] == "子" || 地支矩陣[i] == "午" || 地支矩陣[i] == "卯" || 地支矩陣[i] == "酉") 花量++;
        if (地支矩陣[i] == "寅" || 地支矩陣[i] == "申" || 地支矩陣[i] == "巳" || 地支矩陣[i] == "亥") 馬量++;
    }

    this.庫 = 庫量;
    this.馬 = 馬量;
    this.花 = 花量;
}

function 大運模塊(陽男陰女, 西曆生年, 大運數, 農曆生月干支, 起歲, 日主天干, 時柱干支) {
    // 大運數， 1是第一個大運， 0是小運
    //if(十神計算模式==undefined) 十神計算模式="普及"; //象論的計算模式不一樣

    this.流年 = [];
    //var 大運順逆 = 0;  // 暫時設成0
    if (陽男陰女 == "陽男" || 陽男陰女 == "陰女") 大運順逆 = 1;
    if (陽男陰女 == "陰男" || 陽男陰女 == "陽女") 大運順逆 = -1;

    if (大運數==0) { // 未起運
        this.起年 = 西曆生年;
        this.起歲 = 1;
        //this.干支 = 農曆生月干支;
        this.干支 = "--"; //時柱干支;
        var 大運干支數 = 六十干支字轉值(時柱干支);
        var 大運起年=西曆生年;
        var 大運起歲=1;
        this.歲數間距="1-" + (Number(起歲-1));
    }
    else if(大運數>0) {
        var 大運起年 = (大運數 - 1) * 10 + 西曆生年 + (起歲 - 1);
        var 大運起歲 = (大運數 - 1) * 10 + 起歲;
        var 大運干支數 = 六十干支字轉值(農曆生月干支);

        //if ((陽男陰女 == "陽男") || (陽男陰女 == "陰女")) { 大運順逆 = 1; }
        //if ((陽男陰女 == "陰男") || (陽男陰女 == "陽女")) { 大運順逆 = -1; }

        this.起年 = 大運起年;
        this.起歲 = 大運起歲;
        this.干支 = 六十干支屬性(干支滾動(大運干支數, 大運順逆 * 大運數), 1);
        this.歲數間距=大運起歲 + "-" + (Number(大運起歲+9));
        } //end if 大運數>0
        
        for (var i = 0; i <= 9; i++) {
            var 對應流年=((大運數>0) || (大運數==0 && i<起歲-1))?true:false; //是否有對應的流年, 小運/未起運某些年份並無對應的流年！！
            this.流年[i] = new 流年模塊(大運數, 大運起年+i, 大運起歲+i, 日主天干, 對應流年, 大運干支數, 大運順逆, 時柱干支, 陽男陰女);
        }
    
    this.天干十神 = 尋十神(this.干支.substr(0, 1), 日主天干);
    this.藏干 = 地支屬性(this.干支.substr(1, 1), "藏干");  //取地支"藏干"的屬性
    this.藏干1 = this.藏干.substr(0, 1);
    if (this.藏干.length > 1) { this.藏干2 = this.藏干.substr(1, 1); } else { this.藏干2 = ""; }
    if (this.藏干.length > 2) { this.藏干3 = this.藏干.substr(2, 1); } else { this.藏干3 = ""; }
    this.地支十神1 = 尋十神(this.藏干1, 日主天干);
    this.地支十神2 = 尋十神(this.藏干2, 日主天干);
    this.地支十神3 = 尋十神(this.藏干3, 日主天干);
    this.運星=十二星運數轉字(十二星運(日主天干, this.干支.substr(1, 1)));
    this.納音=六十干支屬性(六十干支字轉值(this.干支), "納音");

    if (大運數>0) {this.大運顯示=this.干支;}
    else if (大運數==0) {this.大運顯示="-";}
    
}

function 流年模塊(大運數, 年份, 歲數, 日主天干, 對應流年, 大運干支數, 大運順逆, 時柱干支, 陽男陰女) {
    //if(十神計算模式==undefined) 十神計算模式="普及"; //象論的計算模式不一樣
    if(對應流年){
        this.年份=年份;
    	this.歲數=歲數;
        this.小運=尋小運(時柱干支, 歲數, 陽男陰女);
        if(大運數==0) { //未起運
            //this.干支 = 六十干支屬性(干支滾動(大運干支數, 大運順逆*歲數), 1); //小運流年干支以時柱干支，陽男陰女順逆，根據淵海子平的方式
            
            this.干支 = 六十干支屬性(干支滾動(1, 年份-1924), 1); //1924甲子年為1，往前挪
            this.藏干 = 地支屬性(this.干支.substr(1, 1), "藏干");
            this.藏干1 = this.藏干.substr(0, 1);
            if (this.藏干.length > 1) { this.藏干2 = this.藏干.substr(1, 1); } else { this.藏干2 = ""; }
            if (this.藏干.length > 2) { this.藏干3 = this.藏干.substr(2, 1); } else { this.藏干3 = ""; }
            this.地支十神1 = 尋十神(this.藏干1, 日主天干);
            this.地支十神2 = 尋十神(this.藏干2, 日主天干);
            this.地支十神3 = 尋十神(this.藏干3, 日主天干);
            this.運星=十二星運數轉字(十二星運(日主天干, this.干支.substr(1, 1)));
            this.納音=六十干支屬性(六十干支字轉值(this.干支), "納音");
            
        } // end if 大運數==0
        
        if(大運數>0) this.干支 = 六十干支屬性(干支滾動(1, 年份-1924), 1); //1924甲子年為1，往前挪

        this.天干十神 = 尋十神(this.干支.substr(0, 1), 日主天干);
		//console.log(大運數 +", " + 年份+", "+干支滾動(1, 年份-1924)+", "  +this.干支);
        this.藏干 = 地支屬性(this.干支.substr(1, 1), "藏干");
        this.藏干1 = this.藏干.substr(0, 1);
        if (this.藏干.length > 1) { this.藏干2 = this.藏干.substr(1, 1); } else { this.藏干2 = ""; }
        if (this.藏干.length > 2) { this.藏干3 = this.藏干.substr(2, 1); } else { this.藏干3 = ""; }
        this.地支十神1 = 尋十神(this.藏干1, 日主天干);
        this.地支十神2 = 尋十神(this.藏干2, 日主天干);
        this.地支十神3 = 尋十神(this.藏干3, 日主天干);
        this.運星=十二星運數轉字(十二星運(日主天干, this.干支.substr(1, 1)));
        this.納音=六十干支屬性(六十干支字轉值(this.干支), "納音");
    }
    else if(!對應流年) { //如果是小運, 小運只有幾個流年, 其他的年份放空
        this.年份="";
    	this.歲數="";
    	this.干支 ="";
        this.天干十神 ="";
        this.地支藏干 = "";
        this.地支十神1 = "";
        this.地支十神2 = "";
        this.地支十神3 = "";
        this.運星="";
        this.納音="";
        this.小運="";
    }
}

function 流月模塊(年份, 日主天干, 月數) {
    //alert(年份 + "/" + 日主天干 + "/"+ 月數);
    //if(十神計算模式==undefined) 十神計算模式="普及"; //象論的計算模式不一樣
    if(parseInt(年份)>1923){
        var 挪前數=(12*(年份-1924))+月數;
        this.干支 = 六十干支屬性(干支滾動(3, 挪前數), 1); //1924的正月為‘丙寅’，3，每年完前挪12,再加上該月的月數
        this.天干十神 = 尋十神(this.干支.substr(0, 1), 日主天干);
        this.地支藏干 = 地支屬性(this.干支.substr(1, 1), "藏干");
        this.地支十神1 = 尋十神(this.地支藏干.substr(0, 1), 日主天干);
        this.地支十神2 = 尋十神(this.地支藏干.substr(1, 1), 日主天干);
        this.地支十神3 = 尋十神(this.地支藏干.substr(2, 1), 日主天干);
        this.運星=十二星運數轉字(十二星運(日主天干, this.干支.substr(1, 1)));       
    }
    else{
        this.干支 = "";
        this.天干十神 = "";
        this.地支藏干 = "";
        this.地支十神1 = "";
        this.地支十神2 = "";
        this.地支十神3 = "";
        this.運星="";        
    }
}

function 現行大運數(西曆生年, 起歲){
    
    var 今年虛歲 = 排盤年份虛歲("虛歲", 西曆生年); //今年年份-西曆生年+1;
    var TestAge=1, 大運數;
    for(var i=0; TestAge<=今年虛歲; i++){
        TestAge=i*10+起歲;
        大運數= i; 
    }
    
    大運數 = (大運數<=8) ? 大運數 : 8; //如果大運數 > 8, 就設第八運為現行大運
    return 大運數;
    /*
    var 今年年份 = new Date().getFullYear();
    var 今年歲數=今年年份-西曆生年+1;
    var TestAge=1, 大運數;
    for(var i=0; TestAge<=今年歲數; i++){
        TestAge=i*10+起歲;
        大運數= i; 
    }
    
     大運數= (大運數<=8) ? 大運數 : 8; //如果大運數 > 8, 就設第八運為現行大運
    return 大運數;
    */
}

function 現行大運流年數(大運起年){
    return 排盤年份虛歲("年份") - 大運起年;
}


function 起小運(時柱, 生年, 陽男陰女){
    //this function is not in used !!
    var 小運矩陣=[];
    var 小運順逆, 小運資訊;

    if (陽男陰女 == "陽男" || 陽男陰女 == "陰女") 小運順逆 = 1;
    if (陽男陰女 == "陰男" || 陽男陰女 == "陽女") 小運順逆 = -1;
    
    for (var i=0; i<90; i++){
        小運資訊={
            "干支": 六十干支屬性(干支滾動(六十干支字轉值(時柱), 小運順逆*(i+1)), "干支"), //小運流年干支以時柱干支，陽男陰女順逆，根據淵海子平的方式
            "年份": 生年+i,
            "歲數": i+1
        } //end object 小運資訊
        小運矩陣.push(小運資訊);
    } // end for
    return 小運矩陣;
} // end function 起小運


function 尋小運(時柱, 歲數, 陽男陰女){
    var 小運順逆, 小運干支;
    if (陽男陰女 == "陽男" || 陽男陰女 == "陰女") 小運順逆 = 1;
    if (陽男陰女 == "陰男" || 陽男陰女 == "陽女") 小運順逆 = -1;
    小運干支=六十干支屬性(干支滾動(六十干支字轉值(時柱), 小運順逆*歲數), "干支"); //小運流年干支以時柱干支，陽男陰女順逆，根據淵海子平的方式
    
    return 小運干支;
}


function 尋起運(生日, 上個節氣, 下個節氣, 陽男陰女) {
    //計算命主是幾歲起運

    var 起年, 起月, 天差數, 時差數, 起歲, 起運順逆, 起運節氣;
     
    if(生日.getSeconds==1) return "000000"; //吉時，不算起運
    
    var 生日時辰=生日.getHours() + ":" + 生日.getMinutes() + ":" + 生日.getSeconds();
    var 生日時辰數 = 時間轉換地支(生日時辰, "時數");
    
    var 生日日期 = new Date(生日);
    生日日期.setHours(0); 生日日期.setMinutes(0); 生日日期.setSeconds(0); 生日日期.setMilliseconds(0);

    if ((陽男陰女 == "陽男") || (陽男陰女 == "陰女")) {
        起運順逆=true;
        var 距離節氣小時 = moment.duration(下個節氣 - 生日).asHours(); //DateDiff(生日,下個節氣,"hours");
        起運節氣 = new Date(下個節氣);
        var 節氣日期 = new Date(下個節氣);
        節氣日期.setHours(0); 節氣日期.setMinutes(0); 節氣日期.setSeconds(0); 節氣日期.setMilliseconds(0);

        天差數 = parseInt(moment.duration(節氣日期 - 生日日期).asDays());
        var 節氣時辰 = 下個節氣.getHours() + ":" + 下個節氣.getMinutes() + ":" + 下個節氣.getSeconds();
        var 節氣時辰數 = 時間轉換地支(節氣時辰, "時數");
        
        //時差數 = ((節氣時辰數 - 生日時辰數)<0) ? 節氣時辰數 - 生日時辰數 + 12: 節氣時辰數 - 生日時辰數;
        if((節氣時辰數 - 生日時辰數)<0) {
            時差數 = 節氣時辰數 - 生日時辰數 + 12;
            天差數 -=1;
        } else 時差數 = 節氣時辰數 - 生日時辰數;
    }  // end if 陽男 陰女
    
    if ((陽男陰女 == "陰男") || (陽男陰女 == "陽女")) {
        起運順逆=false;
        var 距離節氣小時=moment.duration(生日-上個節氣).asHours();
        起運節氣 = new Date(上個節氣);
        var 節氣日期 = new Date(上個節氣);
        節氣日期.setHours(0); 節氣日期.setMinutes(0); 節氣日期.setSeconds(0); 節氣日期.setMilliseconds(0);

        天差數 = parseInt(moment.duration(生日日期 - 節氣日期).asDays());
        var 節氣時辰 = 上個節氣.getHours() + ":" + 上個節氣.getMinutes() + ":" + 上個節氣.getSeconds();
        var 節氣時辰數 = 時間轉換地支(節氣時辰, "時數");

        if((生日時辰數 - 節氣時辰數)<0) {
            時差數 = 生日時辰數 - 節氣時辰數 + 12;
            天差數 +=1;
        } else 時差數 = 生日時辰數 - 節氣時辰數;
    }  // end if 陰男 陽女
    
    var 起運月數 = 天差數 * 4 + Math.floor((時差數*10)/30);
    var 起運天數 = (時差數*10) - Math.floor((時差數*10)/30)*30;
    var 起運年數 = Math.floor(起運月數/12);
    起運月數 = 起運月數-起運年數*12;
    
    起歲 = zeroPad(起運年數, 2) + zeroPad(起運月數, 2) + zeroPad(起運天數, 2);

    var 起運年句, 起運月句, 起運天句;
    if(起運年數!=0) 起運年句 = 起運年數 + "年"; else 起運年句 = "";
    if(起運月數!=0) 起運月句 = 起運月數 + "月"; else 起運月句 = "";
    if(起運天數!=0) 起運天句 = 起運天數 + "天"; else 起運天句 = "";

    // **** 計算上運與交脫 *****
    var 上運日期= new Date(生日);
    上運日期.setFullYear(上運日期.getFullYear() + 起運年數);
    上運日期.setMonth(上運日期.getMonth() + 起運月數);
    上運日期.setDate(上運日期.getDate() + 起運天數);    
    var 生年干支=六十干支屬性((上運日期.getFullYear()-1923) % 60, "干支");
    var 下個換運天干=天干數轉字(天干滾動(天干字轉值(生年干支.substr(0,1)), 5));

    // ********** 建立元件 **********
    var 起歲元件 = {
        "陽男陰女": 陽男陰女,
        "起運順逆": 起運順逆 ? "順行" : "逆行",
        "小時距離": 距離節氣小時,
        "天數距離": 天差數,
        "時辰距離": 時差數,
        "起運年數": 起運年數,
        "起運月數": 起運月數,
        "起運天數": 起運天數,
        "起運數字串": 起歲,
        "節氣日期": 起運節氣, 
        "起運距離句子": "生日與節氣日子相差" + 天差數 + "天" + 時差數 + "個時辰",
        "起運": "出生" + 起運年句 + 起運月句 + 起運天句 + "後起運",
        "上運": "陽曆" + 上運日期.getFullYear() + "年（" + 生年干支 + "）" + (上運日期.getMonth()+1) + "月" + 上運日期.getDate()+ "日後上運",
        "交脫": "每逢" + 生年干支.substr(0,1) + "、" + 下個換運天干 + "年" + + (上運日期.getMonth()+1) + "月" + 上運日期.getDate()+ "日交脫",
        "備註": ""
    };

    //console.log(起歲元件);
    return 起歲元件;
}  //end function 尋起運


function 排盤年份虛歲(選項, 生年){
    //依照立春設定年份與虛歲
    //選項：return 今年年份 or 今年虛歲
    
    if(生年==undefined) 生年=2000; //default value
    var 現在 = new Date();
    var 昨天=現在.setDate(現在.getDate() - 1);  //測試用
    var 今年年份 = new Date().getFullYear();
    var 今年虛歲=今年年份-生年+1;
    var 今年立春=萬年曆("立春", 今年年份);
    if(現在 < 今年立春) {
        今年年份 = 今年年份-1;
        今年虛歲 = 今年虛歲-1;
    }
  
    switch(選項){
        case "年份":
            return 今年年份;
        case "虛歲":
            return 今年虛歲;
    } // end switch
}


//-------------------------------------------------------------------

function 八字命盤架構(輸入資料, 系統設定) {
    //this.運行參數=new 系統參數設定();

    var 輸入生日 = new 日期格式(輸入資料.西曆日期);
    var 干支曆 = 西曆轉換干支曆(輸入資料);
    var 農曆 = 西曆轉換農曆(輸入資料.西曆日期, 輸入資料.城市, 輸入資料.夜子時, false, false, false, false);
    var 陰曆 = 農曆轉換陰曆(農曆);
    //var 遁甲盤=奇門遁甲盤架構(干支曆, 農曆.日期);

    var 曆法={
        "干支曆": 干支曆,
        "農曆": 農曆,
        "陰曆": 陰曆,
        "資訊": new function(){
                        this.人元司令 = "";
                        this.交節日 = "";
                        this.調整軌道的時差 = 軌道太陽時調整(輸入資料.運算西曆, "時差");
                        this.城市時差 = "";
                        this.日光節約 = 日光節約(Number(輸入資料.年), 輸入資料.國家);
                        this.備註= "-";
                    },
        //"奇門遁甲盤": 遁甲盤, 
        "備註": ""
    } // end 曆法 obj

    // ************ 曆法資訊計算 ****************
    if(曆法.干支曆.交節){
        var 交節日期=new 日期格式(曆法.干支曆.交節日期);
        if(曆法.干支曆.交節日節令==曆法.干支曆.節令) 曆法.資訊.交節日= "當天為交節日，剛進入" + 曆法.干支曆.交節日節令 + "。交節時間為" + 交節日期.西曆;
        if(曆法.干支曆.交節日節令!=曆法.干支曆.節令) 曆法.資訊.交節日= "當天為交節日，即將進入" + 曆法.干支曆.交節日節令 + "。交節時間為" + 交節日期.西曆;
    } //end if

    var 節氣天數字串=(曆法.干支曆.當下節令距離天數==0) ? 曆法.干支曆.節令 + "當天，" : 曆法.干支曆.節令 + "後" + 曆法.干支曆.當下節令距離天數 + "天，"
    曆法.資訊.人元司令 = "生於" + 曆法.干支曆.月令 + "月，" + 節氣天數字串 + 曆法.干支曆.司令 + 天干屬性(曆法.干支曆.司令, "五行") + "當令";

    if(輸入資料.城市 !="台北") 曆法.資訊.城市時差 = 城市時間調整(輸入資料.城市, 輸入生日, false, "時差"); 
    
    // *******************************************

    //console.log(曆法);

    //var 西曆生日 = 西曆轉換(輸入資料.西曆日期);
    //var 曆法數據 = 西曆轉換(輸入資料.西曆日期);
    //var 西曆顯示;  //顯示在命盤上的西曆生日，吉時的話，就刪除時辰

    //if(輸入資料.西曆日期.getSeconds()==1) 西曆顯示=輸入生日.西曆日期; else 西曆顯示=輸入生日.西曆;  //西曆日期 is without time，吉時沒有時間

    //console.log(輸入生日);
    
    //***************************** 生日 *****************************
    //this.姓名=輸入資料.姓名;
    this.輸入資料 = 輸入資料;
    this.曆法 = 曆法;
    this.陽男陰女 = ""; //暫時設成0
    this.起歲 = 0; //暫時設成0
    this.起運 = "";

    this.生日 = {
        "西曆生日": 輸入資料.西曆日期,
        "運算生日": 曆法.干支曆.運算的西曆,
        "西曆生日格式": new 日期格式(輸入資料.西曆日期),
        "西曆年": 輸入生日.Year,
        "西曆月": 輸入生日.Month,
        "西曆日": 輸入生日.Day,
        "西曆時": 輸入生日.Hour,
        "西曆分": 輸入生日.Minute,
        "西曆中文": (輸入資料.西曆日期.getSeconds()==1) ? 輸入生日.西曆日期 : 輸入生日.西曆, //西曆顯示, //輸入生日.西曆,
        "西曆英文": 輸入生日.MalaysiaDate,
        "性別": 輸入資料.性別,
        "星座": 尋星座(輸入生日.Month, 輸入生日.Day, 1),
        "星座代號": 尋星座(輸入生日.Month, 輸入生日.Day, 3), //zodiac sign
        "人體卦象": 曆法.干支曆.人體卦象,
        "道家命格": 曆法.干支曆.道家命格,
        "八字": 曆法.干支曆.四柱,
        "節氣": 曆法.干支曆.節氣,
        "節氣數": 曆法.干支曆.節氣數,
        "節令": 曆法.干支曆.節令,
        "節令日期": 曆法.干支曆.節令日期,
        "下個節令日期": 曆法.干支曆.下個節令日期,
        "中氣": 曆法.干支曆.中氣節,
        "中氣日期": 曆法.干支曆.中氣日期,
        "交節日": 曆法.干支曆.交節,
        "當下節令距離天數": 曆法.干支曆.當下節令距離天數,
        "四季": 曆法.干支曆.四季, 
        "旺相休囚死": "", //日干對月令的旺相休囚死
        "農曆": 曆法.農曆.日期,
        "農曆年": 曆法.農曆.干支年,
        "農曆月": 曆法.農曆.月,
        "農曆日": 曆法.農曆.日,
        "農曆時": 曆法.農曆.時,
        "農曆年干支": 曆法.農曆.干支年,
        "干支生月數": 曆法.干支曆.生月數, //比方寅月生為1，丑月生為12
        "命宮生月數": 判斷命宮生月數(曆法, 系統設定.設定.運算設定.命宮月數),
        "生肖": 曆法.干支曆.生肖,
        "起運": "",
        "虛歲": 排盤年份虛歲("虛歲", 輸入資料.西曆日期.getFullYear()), //今年虛歲
    };  //end this.生日

    系統.設定.用戶設定.輸入預設.象論排十神 = 輸入資料.象論盤;  //存儲宮計算十神運用

    this.日主 = this.生日.八字.substr(4, 1);
    this.月令=this.生日.八字.substr(3, 1);
    this.日主五行 = 天干屬性(this.日主, "五行");

    //***************************** 八字 *****************************
    this.年干 = new 天干模塊(this.生日.八字.substr(0, 1),this.日主);
    this.年支 = new 地支模塊(this.生日.八字.substr(1, 1),this.日主);
    this.月干 = new 天干模塊(this.生日.八字.substr(2, 1),this.日主);
    this.月支 = new 地支模塊(this.生日.八字.substr(3, 1),this.日主);
    this.日干 = new 天干模塊(this.生日.八字.substr(4, 1),"");
    this.日支 = new 地支模塊(this.生日.八字.substr(5, 1),this.日主);
    this.時干 = new 天干模塊(this.生日.八字.substr(6, 1),this.日主);
    this.時支 = new 地支模塊(this.生日.八字.substr(7, 1),this.日主);


    //***************************** 四柱 *****************************
    this.年柱 = new 四柱模塊(this.年干.天干, this.年支.地支);
    this.月柱 = new 四柱模塊(this.月干.天干, this.月支.地支);
    this.日柱 = new 四柱模塊(this.日干.天干, this.日支.地支);
    this.時柱 = new 四柱模塊(this.時干.天干, this.時支.地支);

    this.年柱.運星 = 十二星運數轉字(十二星運(this.日干.天干, this.年支.地支));
    this.月柱.運星 = 十二星運數轉字(十二星運(this.日干.天干, this.月支.地支));
    this.日柱.運星 = 十二星運數轉字(十二星運(this.日干.天干, this.日支.地支));
    this.時柱.運星 = 十二星運數轉字(十二星運(this.日干.天干, this.時支.地支));
    
    this.陽男陰女 = 尋陽男陰女(this.輸入資料.性別, this.年支.地支);
    this.旺相休囚死=日干月令對照(this.日干.天干, this.月支.地支, "旺相休囚死");
    this.人元司令 = 曆法.干支曆.司令;

    //************************* 命宮、身宮、胎元 **************************
    this.命宮 = 尋命宮(this.年干.天干, this.生日.命宮生月數, this.時支.地支, this.生日.節氣數, "氣");
    this.身宮 = 尋身宮(this.年干.天干, this.生日.命宮生月數, this.時支.地支);
    this.胎元 = 尋胎元(this.月柱.干支);
    this.胎息 = 尋胎息(this.日柱.干支);
    
    this.空亡 = {
        "年柱": 判空亡(this.年柱.干支),
        "日柱": 判空亡(this.日柱.干支)
    };


    // ******************** 起歲、起運、大運 ************************** 
    this.起運 = 尋起運(this.生日.運算生日, 曆法.干支曆.節令日期, 曆法.干支曆.下個節令日期, this.陽男陰女);
    console.log(this.起運);

    //this.生日.起運=起運數;
    //this.生日.上運=上運計算(this.生日.運算生日, 起運數, "上運");
    //this.生日.交脫=上運計算(this.生日.運算生日, 起運數, "交脫");
    //this.起運 = "出生" + Number(起運數.substr(0, 2)) + "年" + Number(起運數.substr(2, 2)) + "個月" + Number(起運數.substr(4, 2)) +"天後起運";

    
    var BornMonth = this.生日.運算生日.getMonth();
    var StartYear = this.起運.起運年數;

    if (BornMonth + this.起運.起運月數 > 12) StartYear += 1;
    this.起歲 = StartYear+1;
    
    
    this.大運 = [];
    for (var i = 0; i <= 9; i++) {
        this.大運[i] = new 大運模塊(this.陽男陰女, this.生日.運算生日.getFullYear(), i, this.月柱.干支, this.起歲, this.日干.天干, this.時柱.干支);
    }
    
    this.運行 = {
        "大運數": 現行大運數(this.生日.西曆年, this.起歲),
        "大運干支": "",
        "歲數": "",
        "大運流年數": "", //該大運的哪一個流年，比方大運5的第2個流年
        "流年年份": new Date().getFullYear(),
        "流年干支": "",
        "流月用": 0,
        "流月數": "",
        "流月份": "",
        "流月干支": ""
    };

    this.運行.大運流年數=排盤年份虛歲("年份") - this.大運[this.運行.大運數].起年; //這是該大運的那個流年數據, 比方大運3,的第2個流年

    this.流月=[];
    for (var i = 0; i <= 11; i++) {
        this.流月[i] = new 流月模塊(this.運行.流年年份, this.日干.天干, i);
    }

    
    // ******************** 神煞 **************************   
    var 神煞數據=尋神煞(this.年柱.干支, this.月柱.干支, this.日柱.干支, this.時柱.干支, this.陽男陰女);

    this.神煞 = {
        "其他": 神煞數據[0],
        "年柱": 神煞數據[1],
        "月柱": 神煞數據[2],
        "日柱": 神煞數據[3],
        "時柱": 神煞數據[4],  //var 時柱神煞=斷特殊神煞[3].concat(斷日干神煞[3], 斷年支神煞[3], 斷日支神煞[3], 斷月支神煞[3]);
        "命盤": 神煞數據[1].concat(神煞數據[2],神煞數據[3],神煞數據[4],神煞數據[0])
    };

    
    // ******************** 命盤分析資料 **************************   
    var 刑冲合會害矩陣=[];
    var 刑冲合會害表=[];
    var 用神喜忌矩陣 = [];
    var 命盤基本數據矩陣=[];

    this.分析={
        "陰陽五行": new 五行架構(this),
        "五神": new 五神架構(this),
        "四柱": new 四柱架構(this),
        "天干": new 天干架構(this, 0), //只是4個天干而已 
        "天干藏干": new 天干架構(this, 1), //4個天干 + 地支藏干
        "地支": new 地支架構(this),
        "強弱": {
            "日主": {"強弱": "", "強弱值": "", "數據": 0}, //以日干對比基礎數據，強弱：強/弱，強弱值：<25=極弱；25=弱；45=偏弱；50=中和；55=偏強；75：強；>75：極強
            "印比": {"強弱": "", "強弱值": "", "數據": 0}, //以印比 vs. 殺剋洩判斷，註解收集是否得令，通根，祿刃等
            "殺剋洩": {"強弱": "", "強弱值": "", "數據": 0}, 
            "身": {"強弱": "", "強弱值": "", "強弱數": 0, "特別情況": 0}, //強弱：強或弱，強弱值：極強，強。。弱，極弱，特別情況，比方得令，但印比弱，斷身強
            "環境": {"令": "", "環境值": 0}, 
            "註解": []
        },
        "十神": new 十神架構(this),
        "庫馬花": new 庫馬花架構(this),
        "刑冲合會害" : {
            "三合": {
                "成立": false, //三合是否成立 
                "地支": "", //地支的成立條件，eg "申子辰"
                "合化": "", //合化出來的五行
                "合化天干": "", //合化出來的五行天干
                "合化註解": "", //合化成立與否的註解
                "三合柱": "", //三合的地支， eg. "012"
                "不參與柱": -1, //eg. 3
                "不參與地支": "", // eg. "子"
                "爭合地支": "", //eg. "申"
                "爭合柱": -1, //eg. 3
                "備註": ""
            },
            "三會": {
                "成立": false, //三會是否成立 
                "地支": "", //地支的成立條件，eg "申酉戌"
                "五行": "", //會化出來的五行
                "會化天干": "",  //會化出來的五行天干
                "三會柱": "", //三會的地支， eg. "012"
                "不參與柱": -1, //eg. 3
                "不參與地支": "", // eg. "子"
                "備註": ""
            },

            "三刑": {
                "成立": false, //三刑是否成立
                "格局": "", // 三刑格局，無恩之刑，恃勢之刑
                "地支": "", //地支的成立條件，eg "寅巳申"
                "三刑柱": "", //三刑的地支， eg. "012"
                "不參與柱": -1, //eg. 3
                "不參與地支": "", // eg. "子"
                "備註": ""
            },

            "無禮": {
                "成立": false, //無禮之刑是否成立
                "成局": false, //條件成立，而且無解
                "地支": "子卯", //地支的成立條件，eg "子卯"
                "三刑柱": "", //三刑的地支， eg. "02"
                "不參與柱": "", //eg. "13"
                "備註": ""
            },

            "自刑": {
                "成立": false, //無禮之刑是否成立
                "成局": false, //條件成立，而且無解
                "自刑數": 0, //自刑的數量
                "辰辰": {
                    "成立": false, //無禮之刑是否成立
                    "地支": "辰辰", //地支的成立條件
                    "三刑柱": "", //三刑的地支， eg. "02"
                    "不參與柱": "", //eg. "13"
                    "備註": ""
                },
                "午午": {
                    "成立": false, //無禮之刑是否成立
                    "成局": false, //條件成立，而且無解
                    "地支": "午午", //地支的成立條件
                    "三刑柱": "", //三刑的地支， eg. "02"
                    "不參與柱": "", //eg. "13"
                    "備註": ""
                },

                "酉酉": {
                    "成立": false, //無禮之刑是否成立
                    "成局": false, //條件成立，而且無解
                    "地支": "酉酉", //地支的成立條件
                    "三刑柱": "", //三刑的地支， eg. "02"
                    "不參與柱": "", //eg. "13"
                    "備註": ""
                },
                "亥亥": {
                    "成立": false, //無禮之刑是否成立
                    "成局": false, //條件成立，而且無解
                    "地支": "亥亥", //地支的成立條件
                    "三刑柱": "", //三刑的地支， eg. "02"
                    "不參與柱": "", //eg. "13"
                    "備註": ""
                },                             
                "備註": ""
            },

            "半合": "",
            "六合": "",
            "半刑": "",
            "六沖": "",
            "六害": "",
            "合數": 0,
            "刑數": 0,
            "沖數": 0,
            "害數": 0,
            "備註": ""
            /*
            "寅卯辰": false, "巳午未": false, "申酉戌": false, "亥子丑": false, // 三會
            "寅卯": false, "卯辰": false, "寅辰": false, "巳午": false, "午未": false, "巳未": false, "申酉": false, "酉戌": false, "申戌": false, "亥子": false, "子丑": false, "亥丑": false, // 半會
            
            "寅巳申": false, "丑戌未": false, "子卯": false, "辰辰": false, "午午": false, "酉酉": false, "亥亥": false, "丑戌": false, "未戌": false,//三刑

            "申子辰": false, "巳酉丑": false, "亥卯未": false, "寅午戌": false, // 三合
            "申子": false, "子辰": false, "申辰": false, "巳酉": false, "酉丑": false, "巳丑": false, "亥卯": false, "卯未": false, "亥未": false, "寅午": false, "午戌": false, "寅戌": false, // 半合
            "子丑": false, "寅亥": false, "卯戌": false, "辰酉": false, "巳申": false, "午未": false, //六合

            "子午": false, "丑未": false, "寅申": false, "卯酉": false, "辰戌": false, "巳亥": false, //六沖

            "子未": false, "丑午": false, "寅巳": false, "卯辰": false, "申亥": false, "酉戌": false, //六害

            "刑數": 0, "沖數": 0, "合數": 0, "會數": 0, "害數": 0,
            "圖表": []
            */
        },
        // "刑冲合會害表": 刑冲合會害表, //發生在天干還是地支，干支克應，克應的干支，合化五行，合化出的天干，合化出的十神，合化出來的力量，造成合化的四柱，合化柱的間隔數，四柱該減的力度，納入計算，爭，備註1，克應
        "個性": [],
        "疾病": [],
        "婚姻": [],
        "六親": [],
        "行運註解": new 行運分析設定() //儲存流運分析資料
    };


    this.命盤提示={
        "財庫": 判斷財庫(this),
        "庫馬花": "",
        "宮位": "命宮：" + this.命宮 + "，身宮：" + this.身宮 + "，胎元：" + this.胎元 + "，胎息：" + this.胎息,
        "空亡": "日空亡：" + this.空亡.日柱 + "；年空亡：" + this.空亡.年柱,
        "人體卦象": "人體卦象：" + this.生日.人體卦象.卦象 + "，五行：" + this.生日.人體卦象.五行人 + "，" + this.生日.人體卦象.註解
    };

    /*
    this.分析句 = {
        //
        "起運": "出生" + 起運年註解+起運月註解+起運日註解+"後起運",
        "庫馬花": this.分析.庫馬花.庫 + "個庫，" + this.分析.庫馬花.馬 + "個馬，" + this.分析.庫馬花.花 + "個花",
        "節氣": this.生日.節氣+"，"+二十四節氣屬性(this.生日.節氣, "標準註解"),
        "外在內在": this.分析.十神.內在+"個印、比劫、食傷；" + this.分析.十神.外界 + "個財、官",
        "刑冲合會害矩陣": 刑冲合會害矩陣,
        "用神喜忌矩陣": 用神喜忌矩陣,
        "其他": ""
    };

    // ********************* 命盤參數分析 *********************
    //var 測試節氣=年份節氣("曆法", 2016, "香港");
    //console.log(測試節氣.立春);
    //console.log(測試節氣.大寒);
    //console.log(測試節氣.初一干支);
    
    //西曆轉換干支曆(new Date(), "吉隆坡", true);
    
    IntegrityAudit(this);
    //命盤參數分析(this);
    */

    $("#btn-十神格個性").show();
    if(系統.設定.用戶設定.App.八字流年表) {
        填寫流年表(this.大運);
        $("#btn-八字流年表").show();
    }

} // ************************  八字命盤架構 結束  ************************


//  **** 命盤參數 functions *****

function 判斷命宮生月數(輸入生日資料, 選項){
    //輸入生日資料: 曆法，含干支與農曆數據
    //選項：0：依照農曆生月 1：生月中氣（八字）2：盲派
    var 生日的中氣調整 = new Date(輸入生日資料.干支曆.中氣日期);
    var 農曆生月 = 輸入生日資料.農曆.月;
    var 干支曆生月 = 輸入生日資料.干支曆.生月數;
    var 調整後的生月;
    var 運算的西曆=new Date(輸入生日資料.干支曆.運算的西曆);

    if (選項===undefined) 選項=0;

    switch(選項){
        case 0: case "斗數":  // 不調整
            return 農曆生月;
        case 1: case "八字":
            switch(干支曆生月) {
                case 1:
                    調整後的生月=(運算的西曆>=生日的中氣調整) ? 2 : 1;
                    break;
                case 2:
                    調整後的生月=(運算的西曆>=生日的中氣調整) ? 3 : 2;
                    break;
                case 3:
                    調整後的生月=(運算的西曆>=生日的中氣調整) ? 4 : 3;
                    break;
                case 4:
                    調整後的生月=(運算的西曆>=生日的中氣調整) ? 5 : 4;
                    break;
                case 5:
                    調整後的生月=(運算的西曆>=生日的中氣調整) ? 6 : 5;
                    break;
                case 6:
                    調整後的生月=(運算的西曆>=生日的中氣調整) ? 7 : 6;
                    break;
                case 7:
                    調整後的生月=(運算的西曆>=生日的中氣調整) ? 8 : 7;
                    break;
                case 8:
                    調整後的生月=(運算的西曆>=生日的中氣調整) ? 9 : 8;
                    break;
                case 9:
                    調整後的生月=(運算的西曆>=生日的中氣調整) ? 10 : 9;
                    break;
                case 10:
                    調整後的生月=(運算的西曆>=生日的中氣調整) ? 11 : 10;
                    break;
                case 11:
                    調整後的生月=(運算的西曆>=生日的中氣調整) ? 12 : 11;
                    break;
                case 12:
                    調整後的生月=(運算的西曆>=生日的中氣調整) ? 1 : 12;
                    break;
                default:
                    alert("干支曆法生月：" + 干支曆生月 + "。中氣日期：" + 生日的中氣調整);
            } // end switch "八字":
            break;
        default:
            　　//八字命宮應該嚴格按照太陽的相對運動來確定命宮的宮位，所以以上的起法就會有些偏差。校正方法：
            　　//正月太陽在子宮，雨水后第五天進入亥宮，以二月安命；
            　　//二月太陽在亥宮，春分后第七天進入戌宮，以三月安命；
            　　//三月太陽在戌宮，谷雨后第九天進入酉宮，以四月安命；
            　　//四月太陽在酉宮，小滿后第十天進入申宮，以五月安命；
            　　//五月太陽在申宮，夏至后第九天進入未宮，以六月安命；
            　　//六月太陽在未宮，大暑后第八天進入午宮，以七月安命；
            　　//七月太陽在午宮，處暑后第九天進入巳宮，以八月安命；
            　　//八月太陽在巳宮，秋分后第11天進入辰宮，以九月安命；
            　　//九月太陽在辰宮，霜降后第13天進入卯宮，以十月安命；
            　　//十月太陽在卯宮，小雪后第12天進入寅宮，以冬月安命；
            　　//冬月太陽在寅宮，冬至后第八天進入丑宮，以臘月安命；
            　　//臘月太陽在丑宮，大寒后第五天進入子宮，以正月安命。
            switch(干支曆生月) {
                case 1: //正月
                    生日的中氣調整.setDate(生日的中氣調整.getDate() + 5);
                    調整後的生月=(運算的西曆>=生日的中氣調整) ? 2 : 1;
                    break;
                case 2:
                    生日的中氣調整.setDate(生日的中氣調整.getDate() + 7);
                    調整後的生月=(運算的西曆>=生日的中氣調整) ? 3 : 2;
                    break;
                case 3:
                    生日的中氣調整.setDate(生日的中氣調整.getDate() + 9);
                    調整後的生月 = (運算的西曆 >= 生日的中氣調整) ? 4 : 3;
                    break;
                case 4:
                    生日的中氣調整.setDate(生日的中氣調整.getDate() + 10);
                    調整後的生月=(運算的西曆>=生日的中氣調整) ? 5 : 4;
                    break;
                case 5:
                    生日的中氣調整.setDate(生日的中氣調整.getDate() + 9);
                    調整後的生月=(運算的西曆>=生日的中氣調整) ? 6 : 5;
                    break;
                case 6:       
                    生日的中氣調整.setDate(生日的中氣調整.getDate() + 8);
                    調整後的生月=(運算的西曆>=生日的中氣調整) ? 7 : 6;
                    break;
                case 7:            
                    生日的中氣調整.setDate(生日的中氣調整.getDate() + 9);
                    調整後的生月=(運算的西曆>=生日的中氣調整) ? 8 : 7;
                    break;
                case 8: 
                    生日的中氣調整.setDate(生日的中氣調整.getDate() + 11);
                    調整後的生月=(運算的西曆>=生日的中氣調整) ? 9 : 8;
                    break;
                case 9: 
                    生日的中氣調整.setDate(生日的中氣調整.getDate() + 13);
                    調整後的生月=(運算的西曆>=生日的中氣調整) ? 10 : 9;
                    break;
                case 10: 
                    生日的中氣調整.setDate(生日的中氣調整.getDate() + 12);
                    調整後的生月=(運算的西曆>=生日的中氣調整) ? 11 : 10;
                    break;
                case 11: 
                    生日的中氣調整.setDate(生日的中氣調整.getDate() + 8);
                    調整後的生月=(運算的西曆>=生日的中氣調整) ? 12 : 11;
                    break;
                case 12: 
                    生日的中氣調整.setDate(生日的中氣調整.getDate() + 5);
                    調整後的生月=(運算的西曆>=生日的中氣調整) ? 1 : 12;
                    break; 
            } // end switch 調整 農曆生月
    } // end switch 選項
    return 調整後的生月;
} // end function 判斷命宮生月數


// ***************************** 尋 命宮、身宮、胎元 *******************************
function 尋命宮(年干, 生月數, 時支, 節氣數, 計算模式) {
    // 若問命主何命宮,子起正月逆查行。生月支上起生時,順查至卯是命宮。生月天干兩頭查,順逆宮支天干停。
    // 命宮計算的另一個模式是以生月中氣為月支的計算標準，比方過了雨水才是一月
    // 計算模式：節、氣，設置要以生月節還是中氣為計算命盤的標準

    if(計算模式==undefined) 計算模式="節";
    var 時支數 = 地支字轉值(時支);
    var 逆數月數, 命宮地支數, 時轉數;
    var 命宮起支;  //中氣計算採用

    if(時支=="-" || 時支=="") return "";  //如果沒有輸入時支，就沒有命宮
    
    switch(計算模式){
        case "節":
            逆數月數=(-1)*(生月數-1);
            命宮地支數 = 地支滾動(1, 逆數月數); //正月子宮開始, 逆數生月
            時轉數 = ((4 - 時支數) >= 0) ? 4 - 時支數 : 4 - 時支數 + 12; //從生時, 順數到卯時
            命宮地支數 = 地支滾動(命宮地支數, 時轉數); //從生月位置, 順數生時到卯時
            break;
        case "氣": case "中氣":
            switch(節氣數){
                case 23: case 0:  //大寒、立春
                    命宮起支=5;   //辰
                    break;
                case 1: case 2:  //雨水、驚蟄
                    命宮起支=4;  //卯
                    break;                
                case 3: case 4:  //春分、清明
                    命宮起支=3;
                    break;
                case 5: case 6:  //穀雨、立夏
                    命宮起支=2;
                    break;
                case 7: case 8:  //小滿、芒種
                    命宮起支=1;
                    break;
                case 9: case 10:  //夏至、小暑
                    命宮起支=0;
                    break;
                case 11: case 12:  //大暑、立秋
                    命宮起支=11;
                    break;
                case 13: case 14:  //處暑、白露
                    命宮起支=10;
                    break;
                case 15: case 16:  //秋分、寒露
                    命宮起支=9;
                    break;
                case 17: case 18:  //霜降、立冬
                    命宮起支=8;
                    break;
                case 19: case 20:  //小雪、大雪
                    命宮起支=7;
                    break;
                case 21: case 22:  //冬至、小寒
                    命宮起支=6;
                    break;
                default:
                    alert("生月數：" + 生月數 + "，" + "時：" + 時支 + "節氣數：" + 節氣數 + "，命宮地支：" + 命宮起支);
            }  // end switch 節氣數
            命宮地支數 = 地支滾動(命宮起支, (-1)* 時支數);
            break;
    } //end switch(計算模式)
    var 命宮地支=地支數轉字(命宮地支數);
    var 命宮 = 月柱判斷(年干, 命宮地支); //月柱判斷就是五虎遁, function at 曆法.js
    return 命宮;
}  //end 尋命宮

function 尋身宮(年干, 農曆月數, 時支) {
    //身宮口訣記心中,子起正月順查行。生月支上起生時,逆推到酉知身宮。月建天干兩頭數,順推逆推干五行。
    // function 計算不以歌訣, 對照身宮速查表
    var 身宮地支數 = 地支滾動(3, 農曆月數-1); //寅宮起正月, 順數
    var 時支數 = 地支字轉值(時支);
    var 生月子時起數=地支滾動(4, 農曆月數-1); //正月卯宮起子時, 順數
    身宮地支數 = 地支滾動(生月子時起數, 時支數-1); //從生月子時起數, 順數生時
    var 身宮地支=地支數轉字(身宮地支數);

    var 身宮 = 月柱判斷(年干, 身宮地支); //月柱判斷就是五虎遁, function at 曆法.js
    return 身宮;
} //end 尋身宮

function 尋胎元(農曆生月干支) {
    // 尋胎元的方法,月柱天干數+1,地支數+3
    // 胎元'生'命為吉,剋命不利。既胎元的納音屬性與年柱的納音屬性相生為吉,相剋不吉。胎元干支與時柱的納音相生,則長壽,如果與刑冲剋害,則壽短,胎元臨帝旺,必然高壽。
    var 月柱天干數 = 天干字轉值(農曆生月干支.substr(0, 1));
    var 月柱地支數 = 地支字轉值(農曆生月干支.substr(1, 1));
    var 胎元 = 天干數轉字(天干滾動(月柱天干數, 1)) + 地支數轉字(地支滾動(月柱地支數, 3));
    return 胎元;
} // end 尋胎元

function 尋胎息(日柱) {
    // 以日柱干支為基準,取與日柱干支相合者（天干五合,地支六合）之干支,即為「胎息」。例如：辛巳日生人,息元便是丙申矣
    return 天干生剋合(日柱.substr(0, 1), "合") + 地支六合冲害破(日柱.substr(1, 1), "六合");
} //end 尋胎息

























// ***********************************************
// old functions to be deleted !!
//

// ------------------------------------------

function 計算參數數據(){
    this.天干五合化 = 6; //天干合化+6，各柱減3
    this.地支三會 = 12; //三會的力度+12，各柱減3
    this.地支三合 = 9; //三合的力度+9，各柱減3
    this.地支三刑 = 3; //各柱減1
    this.地支半合 = 6; //半合的力度+4，各柱減2
    this.地支六合 = 4; //六合的力度+4，各柱減2
    this.地支暗合 = 2; //暗合的力度+2，各柱減1
    this.地支相刑 = 2; //各柱減1
    //this.地支相冲 = 4; //各柱減2
    this.地支相害 = 2; //各柱減1
    this.合而不化 = -1; //各柱減1
    // ---- 八字力度 ----
    this.干支基數 = 15; //每個八字的干支基數，從15開始，再以合化做加減
    this.ChartNull = true;  //script just started, bazi chart is not loaded yet
}


function debug(){
    this.inputdate = "";  //輸入的生日，轉換前的日期，non date format
    this.calcdate = "";   //輸入的生日，轉換後的日期, date format
    this.momentdate = "";
    this.timezone = "";
    this.now = new Date();
    //this.timezoneoffset=this.now.getTimezoneOffset();
}
//*******************************************************************

